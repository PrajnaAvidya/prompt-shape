I'm developing a templating engine in TS called PromptShape for efficient text-based gpt prompting. Here's my WIP readme/spec so far:

{{@load("spec.md")}}
===
I'm using PEG.js for the parser and here's the source code for the inline variable parser:

{{@load("src/template-parser.pegjs")}}
===
Here's the current source code for the TS parser:

{{@load("src/parser.ts")}}
===
Here's my types

{{@load("src/types.ts")}}
===
I would like some help developing it further.
{currentQuestion}
I've decided I want to capture all variables on the first pass, and stop rendering nested variables inside variables (but keep rendering nested slots)
{/currentQuestion}
{{@currentQuestion}}
